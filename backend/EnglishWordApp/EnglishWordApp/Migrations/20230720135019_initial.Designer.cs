// <auto-generated />
using System;
using EnglishWordApp.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnglishWordApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720135019_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EnglishWordApp.Models.Example", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Examples");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Statement = "Could you give me a quick explanation of how it works?",
                            WordId = 1
                        },
                        new
                        {
                            Id = 2,
                            Statement = "What was her explanation for why she was late?",
                            WordId = 1
                        },
                        new
                        {
                            Id = 3,
                            Statement = "They organized a meeting between the teachers and students.",
                            WordId = 2
                        },
                        new
                        {
                            Id = 4,
                            Statement = "The bedroom is in the attic so it has a sloping ceiling.",
                            WordId = 3
                        });
                });

            modelBuilder.Entity("EnglishWordApp.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastScoreDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("EnglishWordApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScoreId")
                        .IsUnique()
                        .HasFilter("[ScoreId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnglishWordApp.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Definition = "To make something clear or easy to understand by describing..",
                            Expression = "Explanation"
                        },
                        new
                        {
                            Id = 2,
                            Definition = "To make arrangements for something to happen",
                            Expression = "Organize"
                        },
                        new
                        {
                            Id = 3,
                            Definition = "lying at an angle to the horizontal so that some points on it are higher than others..",
                            Expression = "Sloping"
                        });
                });

            modelBuilder.Entity("EnglishWordApp.Models.Example", b =>
                {
                    b.HasOne("EnglishWordApp.Models.Word", "Word")
                        .WithMany("Examples")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("EnglishWordApp.Models.User", b =>
                {
                    b.HasOne("EnglishWordApp.Models.Score", "Score")
                        .WithOne("User")
                        .HasForeignKey("EnglishWordApp.Models.User", "ScoreId");

                    b.Navigation("Score");
                });

            modelBuilder.Entity("EnglishWordApp.Models.Score", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("EnglishWordApp.Models.Word", b =>
                {
                    b.Navigation("Examples");
                });
#pragma warning restore 612, 618
        }
    }
}
